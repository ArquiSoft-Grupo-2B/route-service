# Database Configuration Examples
# Copy this file to .env.development and .env.production and configure your values

# Development Environment
# DB_HOST=localhost
# DB_PORT=5432
# DB_USER=your_dev_user
# DB_PASSWORD=your_dev_password
# DB_NAME=your_dev_database

# Production Environment  
# DB_HOST=your_production_host
# DB_PORT=5432
# DB_USER=your_prod_user
# DB_PASSWORD=your_prod_password
# DB_NAME=your_prod_database

# Application Configuration
# PORT=3000

# Microservices Configuration
# URL del Servicio de Cálculo C++ 
# CALCULATION_SERVICE_URL=http://localhost:8080

# Servicio de Autenticación - Secret para verificar JWT
# AUTH_SERVICE_JWT_SECRET=your_secret_here_should_match_auth_service
# URL del Servicio de Autenticación (GraphQL endpoint)
# AUTH_SERVICE_URL=http://localhost:8000/graphql

# Swagger/Documentation Configuration
# FRONTEND_URL=http://localhost:3000

# RabbitMQ Configuration

# Para Docker (mismo network): amqp://guest:guest@rabbit:5672
# RABBITMQ_URL=amqp://guest:guest@rabbit:5672

# Nombre del exchange para publicar eventos
# NOTA: Debe coincidir con EXCHANGE_NAME del consumidor Spring
# RABBITMQ_EXCHANGE=notification-exchange

# Tipo de exchange (topic, direct, fanout, headers)
# NOTA: Debe coincidir con el tipo usado en Spring (generalmente 'direct')
# RABBITMQ_EXCHANGE_TYPE=direct

# Routing key para eventos de rutas completadas
# NOTA: Debe coincidir con ROUTING_KEY del consumidor Spring
# RABBITMQ_ROUTING_KEY=notification-routing-key

# Configuración de reconexión
# RABBITMQ_MAX_RECONNECT_ATTEMPTS=5
# RABBITMQ_RECONNECT_DELAY=5000